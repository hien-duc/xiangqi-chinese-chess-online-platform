.container {
  --bg-primary: #ffffff;
  --bg-secondary: #f8f9fa;
  --text-primary: #1f2937;
  --text-secondary: #4b5563;
  --text-tertiary: #6b7280;
  --border-color: rgba(229, 231, 235, 0.5);
  --card-bg: #ffffff;
  --hover-bg: #f7fafc;
  --accent-color: #22543d;
  --accent-light: rgba(34, 84, 61, 0.1);
  --accent-dark: rgba(34, 84, 61, 0.9);
  --shadow: 0 4px 6px rgba(0, 0, 0, 0.02), 0 1px 3px rgba(0, 0, 0, 0.03);
  --shadow-hover: 0 10px 15px rgba(0, 0, 0, 0.04), 0 4px 6px rgba(0, 0, 0, 0.02);
  --red-bg: rgba(239, 68, 68, 0.1);
  --red-text: #dc2626;
  --black-bg: rgba(17, 24, 39, 0.1);
  --black-text: #111827;
  --waiting-bg: rgba(245, 158, 11, 0.1);
  --waiting-text: #d97706;
  --active-bg: rgba(16, 185, 129, 0.1);
  --active-text: #059669;
  --completed-bg: rgba(107, 114, 128, 0.1);
  --completed-text: #6b7280;

  width: 100%;
  min-height: calc(100vh - 64px);
  margin: 0;
  padding: 2rem 1.5rem;
  background: var(--bg-primary);
  color: var(--text-primary);
}

.container.darkMode {
  --bg-primary: #1a1a1a;
  --bg-secondary: #2d2d2d;
  --text-primary: #f7fafc;
  --text-secondary: #e2e8f0;
  --text-tertiary: #a0aec0;
  --border-color: rgba(75, 85, 99, 0.3);
  --card-bg: #2d2d2d;
  --hover-bg: #363636;
  --accent-color: #68d391;
  --accent-light: rgba(104, 211, 145, 0.1);
  --accent-dark: rgba(104, 211, 145, 0.9);
  --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  --shadow-hover: 0 10px 15px rgba(0, 0, 0, 0.2);
  --red-bg: rgba(239, 68, 68, 0.15);
  --red-text: #f87171;
  --black-bg: rgba(229, 231, 235, 0.15);
  --black-text: #e5e7eb;
  --waiting-bg: rgba(245, 158, 11, 0.15);
  --waiting-text: #fbbf24;
  --active-bg: rgba(16, 185, 129, 0.15);
  --active-text: #34d399;
  --completed-bg: rgba(107, 114, 128, 0.15);
  --completed-text: #9ca3af;
}

.wrapper {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
}

/* Dark Mode Toggle */
.darkModeToggle {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--border-color);
}

.titleSection {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.controls {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.title {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin: 0;
}

.titleIcon {
  color: var(--text-secondary);
  font-size: 1.75rem;
}

.actionButtons {
  display: flex;
  align-items: center;
  gap: 1rem;
}

/* Refresh and Auto-refresh buttons */
.refreshButton {
  min-width: 2.5rem;
  height: 2.5rem;
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  color: var(--text-secondary);
  font-size: 1rem;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.refreshButton:not(:disabled):hover {
  transform: translateY(-2px);
  border-color: var(--accent-color);
  color: var(--accent-color);
  background: var(--accent-light);
}

.refreshButton.active {
  background: var(--accent-light);
  color: var(--accent-color);
  border-color: var(--accent-color);
}

.refreshButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

.spinning {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Dark Mode Button */
.darkModeButton {
  height: 2.5rem;
  padding: 0 1.25rem;
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  color: var(--text-primary);
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.darkModeButton:hover {
  transform: translateY(-2px);
  border-color: var(--accent-color);
  background: var(--accent-light);
  color: var(--accent-color);
}

.darkModeIcon {
  width: 1.25rem;
  height: 1.25rem;
  transition: transform 0.3s ease;
}

.darkModeButton:hover .darkModeIcon {
  transform: rotate(12deg);
}

/* New Game and Create Game buttons */
.newGameButton,
.createGameButton {
  height: 2.5rem;
  padding: 0 1.5rem;
  background: linear-gradient(135deg, var(--accent-color), var(--accent-dark));
  color: white;
  border: none;
  border-radius: 0.75rem;
  font-weight: 600;
  font-size: 0.9375rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 4px 6px rgba(var(--accent-rgb), 0.1),
              0 2px 4px rgba(var(--accent-rgb), 0.06);
}

.newGameButton:hover,
.createGameButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 8px rgba(var(--accent-rgb), 0.15),
              0 3px 6px rgba(var(--accent-rgb), 0.1);
  filter: brightness(1.1);
}

.newGameButton:active,
.createGameButton:active {
  transform: translateY(1px);
}

.gamesList {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
  animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.gameCard {
  background: var(--card-bg);
  border-radius: 12px;
  box-shadow: var(--shadow);
  transition: all 0.3s ease;
  overflow: hidden;
  border: 1px solid var(--border-color);
  position: relative;
}

.gameCard:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-hover);
}

.gameCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(to right, var(--accent-color), var(--accent-dark));
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gameCard:hover::before {
  opacity: 1;
}

.gameInfo {
  padding: 1.5rem;
  border-bottom: 1px solid var(--border-color);
}

.players {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin-bottom: 1rem;
}

.player {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  border-radius: 8px;
  background: var(--bg-secondary);
  transition: all 0.2s ease;
}

.player:hover {
  background: var(--hover-bg);
}

.side {
  font-weight: 600;
  padding: 0.25rem 0.75rem;
  border-radius: 4px;
  font-size: 0.875rem;
  min-width: 70px;
  text-align: center;
}

.side.redSide {
  background-color: var(--red-bg);
  color: var(--red-text);
}

.side.blackSide {
  background-color: var(--black-bg);
  color: var(--black-text);
}

.name {
  color: var(--text-secondary);
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.playerIcon {
  color: var(--text-tertiary);
  font-size: 1rem;
}

.status {
  margin-bottom: 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.status span {
  padding: 0.25rem 0.75rem;
  border-radius: 4px;
  font-size: 0.875rem;
  font-weight: 500;
}

.waiting {
  background-color: var(--waiting-bg);
  color: var(--waiting-text);
}

.active {
  background-color: var(--active-bg);
  color: var(--active-text);
}

.completed {
  background-color: var(--completed-bg);
  color: var(--completed-text);
}

.created {
  color: var(--text-tertiary);
  font-size: 0.875rem;
}

.actions {
  padding: 1rem 1.5rem;
  display: flex;
  gap: 0.75rem;
  background: var(--bg-secondary);
}

.actionButton {
  flex: 1;
  padding: 0.875rem;
  border: 1px solid var(--border-color);
  border-radius: 0.75rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.625rem;
  background: var(--card-bg);
  color: var(--text-primary);
  font-size: 0.9375rem;
  position: relative;
  overflow: hidden;
}

.actionButton::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: var(--accent-light);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: width 0.4s ease, height 0.4s ease;
}

.actionButton:hover::before {
  width: 150%;
  height: 150%;
}

.actionButton:hover {
  transform: translateY(-2px);
  border-color: var(--accent-color);
}

.actionButton.join {
  background: linear-gradient(135deg, var(--accent-color) 0%, var(--accent-dark) 100%);
  color: white;
  border: none;
  box-shadow: 0 4px 6px rgba(var(--accent-rgb), 0.1),
              0 2px 4px rgba(var(--accent-rgb), 0.06);
}

.actionButton.join::before {
  background: rgba(255, 255, 255, 0.1);
}

.actionButton.join:hover {
  transform: translateY(-2px);
  filter: brightness(1.1);
  box-shadow: 0 6px 8px rgba(var(--accent-rgb), 0.15),
              0 3px 6px rgba(var(--accent-rgb), 0.1);
}

.actionButton.spectate {
  background: var(--bg-secondary);
  color: var(--text-secondary);
  border: 1px solid var(--border-color);
}

.actionButton.spectate:hover {
  color: var(--accent-color);
  border-color: var(--accent-color);
  background: var(--bg-primary);
}

.emptyState {
  text-align: center;
  padding: 4rem 2rem;
  background: var(--bg-secondary);
  border-radius: 12px;
  animation: fadeIn 0.5s ease-out;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1.5rem;
}

.emptyIcon {
  font-size: 4rem;
  color: var(--text-tertiary);
}

.emptyState h2 {
  color: var(--text-primary);
  margin: 0;
  font-size: 1.5rem;
  font-weight: 600;
}

.emptyState p {
  color: var(--text-secondary);
  margin: 0;
  font-size: 1rem;
}

.createGameButton {
  margin-top: 1rem;
}

.loader {
  width: 48px;
  height: 48px;
  border: 4px solid #e5e7eb;
  border-top: 4px solid #22543d;
  border-radius: 50%;
  margin: 0 auto 1.5rem;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.loadingState {
  text-align: center;
  padding: 4rem 2rem;
  background: white;
  border-radius: 12px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.02), 0 1px 3px rgba(0, 0, 0, 0.03);
  animation: fadeIn 0.5s ease-out;
}

.error {
  background: #fee2e2;
  border: 1px solid #ef4444;
  color: #b91c1c;
  padding: 1rem;
  margin: 1rem 0;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  animation: slideIn 0.3s ease-out;
}

.dismissError {
  background: none;
  border: none;
  color: #b91c1c;
  cursor: pointer;
  padding: 4px 8px;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.dismissError:hover {
  background: rgba(185, 28, 28, 0.1);
}

@keyframes slideIn {
  from { transform: translateY(-20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }

  .header {
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;
  }

  .gamesList {
    grid-template-columns: 1fr;
  }

  .actions {
    flex-direction: column;
  }

  .actionButton {
    width: 100%;
  }
}
